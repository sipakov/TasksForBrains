
A task:
You are going to make a long journey through many settlements. In order not to get confused, you made maps of your trip. Each map contains a departure point and a destination.
It is guaranteed that if you order these cards so that for each card in the ordered list the destination on it coincides with the departure point on the next map in the list, one list of cards without cycles and passes will be received.
For example, we have cards
Melbourne> Cologne
Moscow> Paris
Cologne> Moscow
If you sort them according to the above requirements, you will get the following list:
Melbourne> Cologne, Cologne> Moscow, Moscow> Paris


В рамках данной задачи от вас ожидается:
1) Аккуратный и красивый production-level код с комментариями, который не стыдно показать коллегам на ревью
2) Unit-тесты, покрывающие позитивные и негативные сценарии (это обязательное требование)
3) Zip-архив, содержащий компилируемый solution для Visual Studio (это не обязательно, но будет плюсом)
4) К сложности алгоритма и использованию системных ресурсов особых требований не предъявляется. Но более эффективные решения будут плюсом. 

Задача:
Вы собираетесь совершить долгое путешествие через множество населенных пунктов. Чтобы не запутаться, вы сделали карточки вашего путешествия. Каждая карточка содержит в себе пункт отправления и пункт назначения.
Гарантируется, что если упорядочить эти карточки так, чтобы для каждой карточки в упорядоченном списке пункт назначения на ней совпадал с пунктом отправления в следующей карточке в списке, получится один список карточек без циклов и пропусков.
Например, у нас есть карточки
Мельбурн > Кельн
Москва > Париж
Кельн > Москва
Если упорядочить их в соответствии с требованиями выше, то получится следующий список:
Мельбурн > Кельн, Кельн > Москва, Москва > Париж 

Требуется:
1. Написать функцию, которая принимает набор неупорядоченных карточек и возвращает набор упорядоченных карточек в соответствии с требованиями выше, то есть в возвращаемом из функции списке карточек для каждой карточки пункт назначения на ней должен совпадать с пунктом отправления на следующей карточке.
2. Дать оценку сложности получившегося алгоритма сортировки (укажите её, пожалуйста, отдельно, в теле письма с ответом)
3. Написать тесты
